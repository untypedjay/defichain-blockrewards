{"version":3,"sources":["hooks/useLocalStorage.ts","styles/CardStyle.ts","components/Countdown/Countdown.tsx","components/Countdown/CountdownElement.tsx","components/Card/Card.tsx","components/Loader/Loader.tsx","api/defichain.ts","constants/common.ts","utils/blockchain.ts","components/RewardDistribution/RewardDistribution.tsx","App.tsx","reportWebVitals.ts","styles/GlobalStyle.ts","serviceWorker.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","cardStyles","css","StyledContent","styled","p","StyledLabel","StyledCountdown","div","Countdown","date","calculateTimeLeft","useCallback","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","useEffect","interval","setInterval","clearInterval","CountdownElement","label","toUTCString","children","StyledContainer","StyledCard","StyledHeading","h2","Card","title","loading","keyframes","StyledLoader","StyledAnimation","Loader","BASE_ENDPOINT","getStats","a","fetch","response","status","json","log","REDUCTION_BLOCK","getRemainingBlocks","block","getAverageBlockTime","valueOf","getTime","getReductionDate","currentBlock","remainingTime","reductionDate","StyledTable","table","RewardDistribution","StyledApp","StyledVerticalContainer","StyledHorizontalContainer","h1","App","setCurrentBlock","isLoading","setIsLoading","loadData","stats","blockHeight","toFixed","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8e2cd7a7.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useLocalStorage(key: string, initialValue: any) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","import styled, { css } from 'styled-components';\n\nexport const cardStyles = css`\n  background-color: var(--clr-secondary);\n  border-radius: var(--br-card);\n  padding: 2em 2.5em;\n  box-shadow: var(--card-box-shadow);\n  \n  @media (max-width: 330px) {\n    padding: 0.8em 1em;\n  }\n`;\n\nexport const StyledContent = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 0;\n  \n  @media (max-width: 380px) {\n    font-size: 1.5rem;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  color: var(--clr-label);\n  text-transform: uppercase;\n  margin: 1em 0 0 0;\n  \n  @media (max-width: 380px) {\n    font-size: 0.7rem;\n  }\n  \n  @media (max-width: 310px) {\n    font-size: 0.5rem;\n  }\n`;","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { cardStyles } from '../../styles/CardStyle';\nimport { CountdownElement } from './index';\n\ninterface Props {\n  date: Date;\n}\n\nconst StyledCountdown = styled.div`\n  ${cardStyles};\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport default function Countdown({ date }: Props) {\n  const calculateTimeLeft = useCallback(() => {\n    const difference = +date - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60)\n      };\n    }\n    return timeLeft;\n  }, [date]);\n\n  const [timeLeft, setTimeLeft] = useState<any>(calculateTimeLeft());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [calculateTimeLeft]);\n\n  return (\n    <>\n      <StyledCountdown>\n        <CountdownElement label=\"days\">\n          { timeLeft.days }\n        </CountdownElement>\n        <CountdownElement label=\"hours\">\n          { timeLeft.hours }\n        </CountdownElement>\n        <CountdownElement label=\"minutes\">\n          { timeLeft.minutes }\n        </CountdownElement>\n        <CountdownElement label=\"seconds\">\n          { timeLeft.seconds }\n        </CountdownElement>\n      </StyledCountdown>\n      <p>Reward-Rise ETA date: { date.toUTCString() }</p>\n    </>\n  );\n}","import React from 'react';\nimport { StyledContent, StyledLabel } from '../../styles/CardStyle';\n\ninterface Props {\n  children: number;\n  label: string;\n}\n\nexport default function CountdownElement({ children, label }: Props) {\n  return (\n    <div>\n      <StyledContent>{ children }</StyledContent>\n      <StyledLabel>{ label }</StyledLabel>\n    </div>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { cardStyles, StyledContent, StyledLabel } from '../../styles/CardStyle';\n\ninterface Props {\n  title: string;\n  children: string | JSX.Element;\n  label?: string;\n}\n\nconst StyledContainer = styled.div`\n  width: 100%;\n`;\n\nconst StyledCard = styled.div`\n  ${cardStyles};\n`;\n\nconst StyledHeading = styled.h2`\n  font-size: 1.1rem;\n`;\n\nexport default function Card({ title, children, label }: Props): JSX.Element {\n  return (\n    <StyledContainer>\n      <StyledHeading>{ title }</StyledHeading>\n      <StyledCard>\n        {\n          typeof children === 'string' ? <StyledContent>{ children }</StyledContent> :\n          children\n        }\n        { label && <StyledLabel>{ label }</StyledLabel> }\n      </StyledCard>\n    </StyledContainer>\n  );\n}","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst loading = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledLoader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-item: center;\n  justify-content: center;\n  \n  @media (max-width: 830px) {\n    margin-top: -20em;\n    height: 100vh;\n  }\n`;\n\nconst StyledAnimation = styled.div`\n  transition: all .25s ease;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    border-radius: 50%;\n    border: var(--anm-border) solid var(--clr-text);\n    width: var(--anm-size);\n    height: var(--anm-size);\n    border-left: var(--anm-border) solid transparent;\n    border-bottom: var(--anm-border) solid transparent;\n    animation: ${loading} var(--anm-time) ease infinite;\n    z-index: 2;\n  }\n  \n  &:before {\n    z-index: 1;\n    content: '';\n    position: absolute;\n    border-radius: 50%;\n    border: var(--anm-border) dashed var(--clr-text);\n    width: var(--anm-size);\n    height: var(--anm-size);\n    border-left: var(--anm-border) solid transparent;\n    border-bottom: var(--anm-border) solid transparent;\n    animation: ${loading} var(--anm-time) linear infinite;\n  }\n`;\n\nexport default function Loader() {\n  return (\n    <StyledLoader>\n      <StyledAnimation/>\n    </StyledLoader>\n  );\n}","const BASE_ENDPOINT = 'https://api.defichain.io/v1';\n\nexport async function getStats() {\n  const response = await fetch(`${BASE_ENDPOINT}/stats`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    console.log(response);\n    return null;\n  }\n}","export const REDUCTION_BLOCK = 1050000;\nexport const FIRST_BLOCK_UTC = '2020-05-11T06:47:10.0Z';\nexport const CURRENT_BLOCK_REWARD = 258.1;\nexport const FUTURE_BLOCK_REWARD = 405.04;\nexport const REFRESH_TIME = 37000;","import { FIRST_BLOCK_UTC, REDUCTION_BLOCK } from '../constants/common';\n\nexport const getRemainingBlocks = (block: number) => {\n  return REDUCTION_BLOCK - block;\n};\n\nexport const getAverageBlockTime = (block: number) => {\n  const now = new Date().valueOf();\n  const secondsSinceFirstBlock = (now - new Date(FIRST_BLOCK_UTC).getTime()) / 1000;\n  return secondsSinceFirstBlock / block;\n};\n\nexport const getReductionDate = (currentBlock: number) => {\n  const remainingTime = getRemainingBlocks(currentBlock) * getAverageBlockTime(currentBlock);\n  const reductionDate = new Date();\n  return new Date(reductionDate.getTime() + 1000 * remainingTime)\n};","import React from 'react';\nimport { Card } from '../Card';\nimport styled from 'styled-components';\n\nconst StyledTable = styled.table`\n  margin: auto;\n`;\n\nexport default function RewardDistribution() {\n  return (\n    <Card title=\"Reward Distribution:\">\n      <StyledTable>\n        <thead>\n          <tr>\n            <th>Area</th>\n            <th>DFI per block</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Mining Reward</td><td>135</td>\n          </tr>\n          <tr>\n            <td>Community Fund</td><td>19.9</td>\n          </tr>\n          <tr>\n            <td>Anchor Reward</td><td>0.1</td>\n          </tr>\n          <tr>\n            <td>DEX Liquidity Mining</td><td>103.1</td>\n          </tr>\n        </tbody>\n      </StyledTable>\n    </Card>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { Countdown } from './components/Countdown';\nimport { Card } from './components/Card';\nimport { Loader } from './components/Loader';\nimport { getStats } from './api/defichain';\nimport {\n  CURRENT_BLOCK_REWARD,\n  FUTURE_BLOCK_REWARD,\n  REDUCTION_BLOCK,\n  REFRESH_TIME\n} from './constants/common';\nimport {\n  getAverageBlockTime,\n  getReductionDate,\n  getRemainingBlocks\n} from './utils/blockchain';\nimport { RewardDistribution } from './components/RewardDistribution';\n\nconst StyledApp = styled.div`\n  color: var(--clr-text);\n  height: 100%;\n  top: 0;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  \n  @media (max-width: 830px) {\n    margin: 8em 0;\n    padding: 0 8%;\n  }\n  \n  @media (max-width: 600px) {\n    padding: 40px;\n  }\n  \n  @media (max-width: 440px) {\n    padding: 20px;\n    margin: 8em 0;\n  }\n`;\n\nconst StyledVerticalContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  grid-gap: 2em;\n  \n  @media (max-width: 700px) {\n    grid-template-columns: 1fr;\n    padding-bottom: 3em;\n  }\n`;\n\nconst StyledHorizontalContainer = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  grid-gap: 2em;\n  height: 100%;\n`;\n\nconst StyledHeading = styled.h1`\n  margin: 0 0 1em 0;\n  font-size: 2.3rem;\n`;\n\nexport default function App() {\n  const [currentBlock, setCurrentBlock] = useLocalStorage('currentBlock', 0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const stats = await getStats();\n      setCurrentBlock(stats.blockHeight);\n      setIsLoading(false);\n    };\n\n    loadData();\n\n    const interval = setInterval(() => {\n      loadData();\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, [setCurrentBlock]);\n\n  return (\n    <StyledApp>\n      { isLoading ? <Loader/> :\n        <>\n          <StyledHeading>\n            DefiChain Block Reward Countdown\n          </StyledHeading>\n          <p>\n            Block reward will change from { CURRENT_BLOCK_REWARD } to { FUTURE_BLOCK_REWARD } coins in approximately\n          </p>\n\n          <Countdown date={getReductionDate(currentBlock)}/>\n\n          <StyledVerticalContainer>\n            <StyledHorizontalContainer>\n              <Card\n                title=\"Blocks Remaining:\"\n                label={`until ${ REDUCTION_BLOCK }`}\n              >\n                { `${ getRemainingBlocks(currentBlock) }` }\n              </Card>\n              <Card\n                title=\"Average Block Time:\"\n                label=\"seconds\"\n              >\n                { `${ getAverageBlockTime(currentBlock).toFixed(2) }` }\n              </Card>\n            </StyledHorizontalContainer>\n            <RewardDistribution/>\n          </StyledVerticalContainer>\n        </>\n      }\n    </StyledApp>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --clr-accent: #AD09D7;\n    --clr-primary: #F4F3F6;\n    --clr-secondary: #FFFFFF;\n    --clr-text: #363636;\n    --clr-label: #9C9C9C;\n\n    --br-card: 20px;\n    --br-button: 4px;\n    \n    --card-box-shadow: 0 8px 16px 0 rgb(0 0 0 / 4%);\n    --card-border: 1px solid rgba(0, 0, 0, .2);\n    --hover-transition: 0.2s ease;\n\n    --anm-size: 50px;\n    --anm-border: 4px;\n    --anm-time: 1.3s;\n  }\n  \n  * {\n    box-sizing: border-box;\n    font-family: \"IBM Plex Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif,\n      \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  }\n  \n  html,\n  body {\n    margin: 0;\n    paddding: 0;\n  }\n  \n  html,\n  body,\n  #root {\n    height: 100%;\n    background-color: var(--clr-primary);\n  }\n`;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config?: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}