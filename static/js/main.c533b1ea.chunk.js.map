{"version":3,"sources":["api/defichain.ts","styles/CardStyle.ts","components/Countdown/Countdown.tsx","components/Countdown/CountdownElement.tsx","components/Card/Card.tsx","components/Loader/Loader.tsx","constants/common.ts","hooks/useLocalStorage.ts","App.tsx","reportWebVitals.ts","styles/GlobalStyle.ts","index.tsx"],"names":["BASE_ENDPOINT","getStats","a","fetch","response","status","json","console","log","cardStyles","css","StyledContent","styled","p","StyledLabel","StyledCountdown","div","Countdown","date","calculateTimeLeft","useCallback","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","useState","setTimeLeft","useEffect","interval","setInterval","clearInterval","CountdownElement","label","toUTCString","children","StyledContainer","StyledCard","StyledHeading","h2","Card","title","loading","keyframes","StyledLoader","StyledAnimation","Loader","REDUCTION_BLOCK","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","StyledApp","h1","App","currentBlock","setCurrentBlock","isLoading","setIsLoading","loadData","stats","blockHeight","getRemainingBlocks","getAverageBlockTime","block","valueOf","getTime","remainingTime","reductionDate","getReductionDate","toFixed","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c533b1ea.chunk.js","sourcesContent":["const BASE_ENDPOINT = 'https://api.defichain.io/v1';\n\nexport async function getStats() {\n  const response = await fetch(`${BASE_ENDPOINT}/stats`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    console.log(response);\n    return null;\n  }\n}","import styled, { css } from 'styled-components';\n\nexport const cardStyles = css`\n  background-color: var(--clr-secondary);\n  border-radius: var(--br-card);\n  padding: 2em 2.5em;\n  box-shadow: var(--card-box-shadow);\n  \n  @media (max-width: 330px) {\n    padding: 0.8em 1em;\n  }\n`;\n\nexport const StyledContent = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 0;\n  \n  @media (max-width: 380px) {\n    font-size: 1.5rem;\n  }\n`;\n\nexport const StyledLabel = styled.p`\n  color: var(--clr-label);\n  text-transform: uppercase;\n  margin: 1em 0 0 0;\n  \n  @media (max-width: 380px) {\n    font-size: 0.7rem;\n  }\n  \n  @media (max-width: 310px) {\n    font-size: 0.5rem;\n  }\n`;","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { cardStyles } from '../../styles/CardStyle';\nimport { CountdownElement } from './index';\n\ninterface Props {\n  date: Date;\n}\n\nconst StyledCountdown = styled.div`\n  ${cardStyles};\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport default function Countdown({ date }: Props) {\n  const calculateTimeLeft = useCallback(() => {\n    const difference = +date - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60)\n      };\n    }\n    return timeLeft;\n  }, [date]);\n\n  const [timeLeft, setTimeLeft] = useState<any>(calculateTimeLeft());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [calculateTimeLeft]);\n\n  return (\n    <>\n      <StyledCountdown>\n        <CountdownElement label=\"days\">\n          { timeLeft.days }\n        </CountdownElement>\n        <CountdownElement label=\"hours\">\n          { timeLeft.hours }\n        </CountdownElement>\n        <CountdownElement label=\"minutes\">\n          { timeLeft.minutes }\n        </CountdownElement>\n        <CountdownElement label=\"seconds\">\n          { timeLeft.seconds }\n        </CountdownElement>\n      </StyledCountdown>\n      <p>Reward-Drop ETA date: { date.toUTCString() }</p>\n    </>\n  );\n}","import React from 'react';\nimport { StyledContent, StyledLabel } from '../../styles/CardStyle';\n\ninterface Props {\n  children: number;\n  label: string;\n}\n\nexport default function CountdownElement({ children, label }: Props) {\n  return (\n    <div>\n      <StyledContent>{ children }</StyledContent>\n      <StyledLabel>{ label }</StyledLabel>\n    </div>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { cardStyles, StyledContent, StyledLabel } from '../../styles/CardStyle';\n\ninterface Props {\n  title: string;\n  children: string;\n  label: string;\n}\n\nconst StyledContainer = styled.div`\n  width: 100%;\n`;\n\nconst StyledCard = styled.div`\n  ${cardStyles};\n`;\n\nconst StyledHeading = styled.h2`\n  font-size: 1.1rem;\n`;\n\nexport default function Card({ title, children, label }: Props) {\n  return (\n    <StyledContainer>\n      <StyledHeading>{ title }</StyledHeading>\n      <StyledCard>\n        <StyledContent>{ children }</StyledContent>\n        <StyledLabel>{ label }</StyledLabel>\n      </StyledCard>\n    </StyledContainer>\n  );\n}","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst loading = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst StyledLoader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-item: center;\n  justify-content: center;\n  \n  @media (max-width: 830px) {\n    margin-top: -20em;\n    height: 100vh;\n  }\n`;\n\nconst StyledAnimation = styled.div`\n  transition: all .25s ease;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    border-radius: 50%;\n    border: var(--anm-border) solid var(--clr-text);\n    width: var(--anm-size);\n    height: var(--anm-size);\n    border-left: var(--anm-border) solid transparent;\n    border-bottom: var(--anm-border) solid transparent;\n    animation: ${loading} var(--anm-time) ease infinite;\n    z-index: 2;\n  }\n  \n  &:before {\n    z-index: 1;\n    content: '';\n    position: absolute;\n    border-radius: 50%;\n    border: var(--anm-border) dashed var(--clr-text);\n    width: var(--anm-size);\n    height: var(--anm-size);\n    border-left: var(--anm-border) solid transparent;\n    border-bottom: var(--anm-border) solid transparent;\n    animation: ${loading} var(--anm-time) linear infinite;\n  }\n`;\n\nexport default function Loader() {\n  return (\n    <StyledLoader>\n      <StyledAnimation/>\n    </StyledLoader>\n  );\n}","export const REDUCTION_BLOCK = 1050000;\nexport const FIRST_BLOCK_UTC = '2020-05-11T06:47:10.0Z';\nexport const CURRENT_BLOCK_REWARD = 200;\nexport const FUTURE_BLOCK_REWARD = 150;\nexport const REFRESH_TIME = 37000;","import { useState } from 'react';\n\nfunction useLocalStorage(key: string, initialValue: any) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getStats } from './api/defichain';\nimport { Countdown } from './components/Countdown';\nimport { Card } from './components/Card';\nimport { Loader } from './components/Loader';\nimport {\n  CURRENT_BLOCK_REWARD,\n  FIRST_BLOCK_UTC, FUTURE_BLOCK_REWARD,\n  REDUCTION_BLOCK, REFRESH_TIME\n} from './constants/common';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst StyledApp = styled.div`\n  color: var(--clr-text);\n  height: 100%;\n  top: 0;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 800px;\n  margin: 0 auto;\n  \n  @media (max-width: 830px) {\n    margin: 8em 0;\n    padding: 0 8%;\n  }\n  \n  @media (max-width: 600px) {\n    padding: 40px;\n  }\n  \n  @media (max-width: 440px) {\n    padding: 20px;\n    margin: 10em 0;\n  }\n`;\n\nconst StyledContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: 100%;\n  grid-gap: 2em;\n  \n  @media (max-width: 700px) {\n    flex-direction: column;\n    padding-bottom: 3em;\n  }\n`;\n\nconst StyledHeading = styled.h1`\n  margin: 0 0 1em 0;\n  font-size: 2.3rem;\n`;\n\nexport default function App() {\n  const [currentBlock, setCurrentBlock] = useLocalStorage('currentBlock', 0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const stats = await getStats();\n      setCurrentBlock(stats.blockHeight);\n      setIsLoading(false);\n    };\n\n    loadData();\n\n    const interval = setInterval(() => {\n      loadData();\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, [setCurrentBlock]);\n\n  const getRemainingBlocks = () => {\n    return REDUCTION_BLOCK - currentBlock;\n  };\n\n  const getAverageBlockTime = (block: number) => {\n    const now = new Date().valueOf();\n    const secondsSinceFirstBlock = (now - new Date(FIRST_BLOCK_UTC).getTime()) / 1000;\n    return secondsSinceFirstBlock / block;\n  };\n\n  const getReductionDate = () => {\n    const remainingTime = getRemainingBlocks() * getAverageBlockTime(currentBlock);\n    const reductionDate = new Date();\n    return new Date(reductionDate.getTime() + 1000 * remainingTime)\n  };\n\n  return (\n    <StyledApp>\n      { isLoading ? <Loader/> :\n        <>\n          <StyledHeading>\n            DefiChain Block Reward Reduction Countdown\n          </StyledHeading>\n          <p>\n            Block reward will decrease from { CURRENT_BLOCK_REWARD } to { FUTURE_BLOCK_REWARD } coins in approximately\n          </p>\n\n          <Countdown date={getReductionDate()}/>\n\n          <StyledContainer>\n            <Card\n              title=\"Blocks Remaining:\"\n              label={`until ${ REDUCTION_BLOCK }`}\n            >\n              { `${ getRemainingBlocks() }` }\n            </Card>\n            <Card\n              title=\"Average Block Time:\"\n              label=\"seconds\"\n            >\n              { `${ getAverageBlockTime(currentBlock).toFixed(2) }` }\n            </Card>\n          </StyledContainer>\n        </>\n      }\n    </StyledApp>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --clr-accent: #AD09D7;\n    --clr-primary: #F4F3F6;\n    --clr-secondary: #FFFFFF;\n    --clr-text: #363636;\n    --clr-label: #9C9C9C;\n\n    --br-card: 20px;\n    --br-button: 4px;\n    \n    --card-box-shadow: 0 8px 16px 0 rgb(0 0 0 / 4%);\n    --card-border: 1px solid rgba(0, 0, 0, .2);\n    --hover-transition: 0.2s ease;\n\n    --anm-size: 50px;\n    --anm-border: 4px;\n    --anm-time: 1.3s;\n  }\n  \n  * {\n    box-sizing: border-box;\n    font-family: \"IBM Plex Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif,\n      \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  }\n  \n  html,\n  body {\n    margin: 0;\n    paddding: 0;\n  }\n  \n  html,\n  body,\n  #root {\n    height: 100%;\n    background-color: var(--clr-primary);\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}